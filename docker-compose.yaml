x-postgres-variables: &postgres-variables
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

x-minio-variables: &minio-variables
  MINIO_ROOT_USER: ${MINIO_ROOT_USER}
  MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

services:
  backend:
    build:
      context: ./backend
      dockerfile: dockerfile
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      PYTHONUNBUFFERED: "1"
    command:
      [
        "uvicorn",
        "src.main:app",
        "--host","0.0.0.0",
        "--port","8000",
        "--loop","uvloop",
        "--http","httptools",
        "--workers","2"
      ]
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app:delegated
    working_dir: /app

  db:
    image: postgres:17
    restart: always
    environment:
      <<: *postgres-variables
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:8.7
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    restart: always
    environment:
      <<: *minio-variables
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  mc:
    image: minio/mc:latest
    entrypoint: /bin/sh -c
    command: |
      "mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
       mc mb --ignore-existing local/${MINIO_BUCKET} &&
       mc anonymous set download local/${MINIO_BUCKET}"
    depends_on:
      minio:
        condition: service_healthy

volumes:
  pgdata:
  minio_data: